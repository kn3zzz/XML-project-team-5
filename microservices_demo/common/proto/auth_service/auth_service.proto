syntax = "proto3";

option go_package = "github.com/tamararankovic/microservices_demo/common/auth";

package auth;

import "google/api/annotations.proto";

service AuthService{
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/register"
      body:"data"
    };}
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/login"
      body: "data"
    };
  }
  rpc Verify(VerifyRequest) returns (VerifyResponse){
    option(google.api.http) = {
      get: "/verify/{username}/{code}"
    };
  }
  rpc Recovery(RecoveryRequest) returns(RecoveryResponse){
    option(google.api.http) = {
      get:"/login/recovery/{username}"
    };
  }
  rpc Recover(RecoveryRequestData) returns (LoginResponse) {
    option(google.api.http) = {
      post: "/login/recovery"
      body: "data"
    };
  }
  rpc Admin(GetAdmins) returns (AdminResponse){
    option (google.api.http) = {
      get: "/adminMethod"
    };
  }
}

// Register

message RegisterRequest {
  RegisterRequestData data=1;
}

message RegisterRequestData{
  string username = 1;
  string password = 2;
  string email = 3;
}

message RegisterResponse {
  int64 status = 1;
  string error = 2;
  string userID = 3;
}

// Login

message LoginRequest {
  LoginData data = 1;
}

message LoginData{
  string username = 1;
  string password = 2;
}

message LoginResponse {
  int64 status = 1;
  string error = 2;
  string token = 3;
  string username=4;
  string role=5;
  string userID = 6;
}

message VerifyRequest {
  string username = 1;
  string code = 2;
}
message VerifyResponse{
  bool verified = 1;
  string msg = 2;
}

message RecoveryRequest {
  string username = 1;
}

message RecoveryResponse{
  int32 status = 1;
  string msg = 2;
}

message RecoveryRequestData {
  RecoveryRequestLogin data = 1;
}

message RecoveryRequestLogin {
  string username = 1;
  string recoveryCode = 2;
  string newPassword = 3;
  string confirmNewPassword = 4;
}

// Validate

message ValidateRequest { string token = 1; }

message ValidateResponse {
  int64 status = 1;
  string error = 2;
  string userId = 3;
}

//Extract Data
message ExtractDataFromTokenResponse{
  string id=1;
  string username=2;
  string role=3;
}

message ExtractDataFromTokenRequest{
  string token=1;
}

//Admin Method

message GetAdmins{}

message AdminResponse{
  string msg = 1;
}